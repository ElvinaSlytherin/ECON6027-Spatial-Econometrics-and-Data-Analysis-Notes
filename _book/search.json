[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ECON6027 Spatial Econometrics and Data Analysis Notes",
    "section": "",
    "text": "Preface\nThis book was created as a personal study guide to supplement my learning in ECON6027: Spatial Econometrics and Data Analysis, taught by Professor Liu Shew Fan. My goal was to consolidate the lecture notes into a single, comprehensive reference to help me prepare for the final exam.\nThe content is based on Professor Liu’s insightful lecture materials, but I’ve added my own annotations, expanded explanations, and detailed solutions to the in-class exercises. By bringing these elements together, I hope to provide a more integrated and accessible resource for anyone studying spatial econometrics, especially those looking for a clear path through the technical concepts and practical applications.\nThis book is intended for students who have a foundational understanding of econometrics and want to deepen their knowledge of spatial data analysis. It serves as a companion to the course, providing a structured approach to understanding the key theories and methods presented in class.\nI am immensely grateful to Professor Liu Shew Fan for her guidance and expertise. Her lectures were the foundation of this work, and her passion for the subject inspired me to organize my notes in this format.\n\n\n\n\nBivand, Roger S., Edzer Pebesma, and Virgilio Gomez-Rubio. n.d. “Sp: Classes and Methods for Spatial Data.” Accessed August 31, 2025. https://cran.r-project.org/web/packages/sp/vignettes/intro_sp.pdf.\n\n\nBrunsdon, Chris, and Lex Comber. n.d. “An Introduction to Sp and Sf: The Sf Revolution.” Accessed August 31, 2025. https://bookdown.org/lexcomber/brunsdoncomber2e/Ch3.html.\n\n\n“Coordinate Systems Worldwide.” n.d. Accessed August 31, 2025. https://epsg.io.\n\n\nGimond, M. n.d. “Feature Representation.” Accessed August 31, 2025. https://mgimond.github.io/Spatial/feature-representation.html.\n\n\nLovelace, Robin. n.d. “Spatial Classes.” Accessed August 31, 2025. https://geocompr.robinlovelace.net/spatial-class.html.\n\n\nLovelace, Robin, Jakub Nowosad, and Jannes Muenchow. 2022. Geocomputation with r. https://geocompr.robinlovelace.net.\n\n\n———. 2023a. “Geocomputation with R: Spatial Operations.” 2023. https://geocompr.robinlovelace.net/spatial-operations.html#spatial-vec.\n\n\n———. 2023b. “Geocomputation with R: Vector Attribute Manipulation.” 2023. https://geocompr.robinlovelace.net/attr.html#vector-attribute-manipulation.\n\n\nNowosad, Jakub. n.d. “spData Package for r.” Accessed September 5, 2025. https://nowosad.github.io/spData/.\n\n\nSchabenberger, Oliver, and Carol A. Gotway. 2005. Statistical Methods for Spatial Data Analysis. 1st ed. CRC Press.\n\n\n“Simple Features for r (Sf) Vignette.” n.d. Accessed August 31, 2025. https://r-spatial.github.io/sf/articles/.",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "introduction_to_spatial_data.html",
    "href": "introduction_to_spatial_data.html",
    "title": "1  Introduction to Spatial Data",
    "section": "",
    "text": "1.1 What is Spatial Data?\nSpatial data consists of positional information, answering the question “where is it” (on Earth, body, Sun, moon etc). Many empirical data contain not only information about the attribute of interest (i.e. the response/variable being studied), but also other variables that denote the geographic location where the response was observed. In particular, spatial data has a spatial reference: they have (i) coordinates and (ii) a system of reference for those coordinates (aka a coordinate reference system, CRS).",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction to Spatial Data</span>"
    ]
  },
  {
    "objectID": "introduction_to_spatial_data.html#what-is-spatial-data",
    "href": "introduction_to_spatial_data.html#what-is-spatial-data",
    "title": "1  Introduction to Spatial Data",
    "section": "",
    "text": "NoteExamples of spatial data\n\n\n\n\nLocations of volcano peaks on Earth\n\nWe could list the coordinates for all known volcanoes as pairs of longitude and latitude decimal degree with respect to the prime meridian of Greenwich and zero latitude at the equator (known as the World Geodetic System - WGS84).\n\nTemperature at various residential towns around Singapore\n\nWe can measure the temperature for these areas around Singapore and make use of the CRS - SVY21.\n\nDengue clusters around Singapore\n\nSimilarly, we can collect data on dengue clusters around Singapore and make use of CRS - SVY21.\n\n\nTo verify if the CRS used in the dataset is accurate, we can refer to the Coordinate Systems Worldwide - https://epsg.io/.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction to Spatial Data</span>"
    ]
  },
  {
    "objectID": "introduction_to_spatial_data.html#key-features-of-spatial-data",
    "href": "introduction_to_spatial_data.html#key-features-of-spatial-data",
    "title": "1  Introduction to Spatial Data",
    "section": "1.2 Key Features of Spatial Data",
    "text": "1.2 Key Features of Spatial Data\nOne of the key features of spatial data is the auto-correlation (i.e. correlation with itself) of observations of observations in space. Observations in close spatial proximity tend to be more similar than for observations that are more spatially separated. We can understand that \\(Cor({X_1},{X_2})\\) ranges from \\(-1\\) to \\(1\\) and that correlation increases as \\(X_1\\) and \\(X_2\\) get closer and closer to each other.\nEssentially, spatial data analysis developed concurrently across many disciplines, including geology, geography, and meteorology, as well as other non-traditional statistical areas. This led to the development of various methodologies, from traditional statistical techniques like linear models, response surface theory, and spatial statistics to spatial econometric approaches. The primary challenge today is to effectively combine these diverse tools to suit our specific analytical needs.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction to Spatial Data</span>"
    ]
  },
  {
    "objectID": "introduction_to_spatial_data.html#types-of-spatial-data-theoretical-classification",
    "href": "introduction_to_spatial_data.html#types-of-spatial-data-theoretical-classification",
    "title": "1  Introduction to Spatial Data",
    "section": "1.3 Types of Spatial Data: Theoretical Classification",
    "text": "1.3 Types of Spatial Data: Theoretical Classification\nWe denote a spatial process in \\(D\\) dimensions as: \\({Z(s):s\\in D \\subset R^d}\\) where \\(Z\\) is the observed attribute (such as pollution, temperature etc.) of location s, a \\((D \\times 1)\\) vector of coordinates. The spatial data types are distinguished through characteristics of the domain \\(D\\).\n\n\n\nPollution of Ozone Layer\n\n\n\n1.3.1 Geospatial / Geostatistical / Earth Data\nDomain \\(D\\) is continuous s.t. \\(Z(s)\\) can be observed anywhere in \\(D\\). This means that between any two sample locations, we can theoretically place an infinite number of other samples. For example, I can measure temperature at multiple locations in the same classroom.\n\n\n\n\n\n\nNoteExamples of Geostatistical Data\n\n\n\n\nFor example, consider measuring air temperature or PSI value, which at least in theory, can be recorded at any location.\nHowever, we will only observe a finite number of observations (e.g. only taking temperature at Dhoby Ghaut, which is 1 location, making it one sample).\n\nIn the image above, we would have monitoring stations at some locations and use that data to reconstruct the ozone layer, as compared to taking measurements across the entire region, which is costly and operationally impossible.\n\nOther examples include ozone layer concentration of a certain material, ground communication levels etc.\n\n\n\nDue to the continuity of \\(D\\), geostatistical data is also known as spatial data with continuous variation. Since the spatial domain is continuous, it cannot be sampled exhaustively and an important task in the analysis is the reconstruction of the surface of the attribute \\(Z\\) over the entire domain, i.e. mapping of \\(Z(s)\\).\n\n\n\n\n\n\nImportant\n\n\n\nContinuity is associated with the domain and not the attribute itself (which may be discrete or continuous or even nominal or ordinal). For example, temperature can be measured using a Celsius scale (continuous) or an ordinal scale (discrete).\n\n\n\n\n1.3.2 Point Patterns\nA point pattern has a random domain and the attribute itself will be Degenerate/binary in nature (i.e. it is either there or not there). If along with the location of an event, if we observe a stochastic attribute, then it is called a marked pattern.\n\n\n\n\n\n\nNoteExample of Point Patterns\n\n\n\n\nPoint Patterns:\n\nLocations of lightning strikes\nLocations at which weed emerge in a garden\nLocation of lunar craters\n\nMarked Patterns:\n\nObserving the size of the lunar crater along with the location\n\n\n\n\n\n\n1.3.3 Areal / Lattice / Regional Data\nAreal data is spatial data where the domain \\(D\\) is fixed and discrete (non-random and countable). Spatial locations with areal data are often referred to as sites or areal units.\n\n\n\n\n\n\nNoteExample of such spatial data\n\n\n\n\nPostal codes\nGRCs\nPlanning areas\nRemotely sensed data reported by pixels (such as data coming from satellites)\n\n\n\n\n\n\nTotal Population of Singapore by Planning Area\n\n\nAs seen in the image above, we would denote \\(Z\\) as total population.\nIt is important to note that one of the main differences between point data and areal data is that, in practice, areal data are spatially aggregated over areal regions. Mathematically, this refers to an integration of a continuous spatial attribute. Essentially, we are only taking 1 observation for the entire planning area.\n\n\n\n\n\n\nNoteExample of areal data\n\n\n\n\nYield measures on an agricultural plot\nEvent counts (such as deaths, crimes, voter turnout, etc.) for various sites (such as postal codes, regions, states, etc.)\n\n\n\n\n\n\n\n\n\nTipIrregular vs Regular Areal Data\n\n\n\n\n\n\nAreal Unit Type\nMore Precise Term\nExample\n\n\n\n\nIrregular\nRegional data\n(No example given)\n\n\nRegular\nLattice data\nSatellite imagery\n\n\n\nKey Feature: Given the discrete nature of the collection of sites, areal data can be exhaustive, which is another differentiating feature compared to point data or geospatial data.\n\nExample: Voter turnout data provides a number for every electoral unit, and the issue of predicting the number for any other area does not arise.\n\n\n\n\n1.3.3.1 Modifiable Areal Unit Problem (MAUP)\nCoined by geographers during the 1970s, the modifiable areal unit problem (MAUP) is one of the most stubborn problems in spatial analysis when spatially aggregated data are used. Data tabulated for different spatial scale levels or according to different zonal systems for the same region will not provide consistent analysis results. This means that when we run analysis on a regional vs planning area basis, the results will differ but both results are correct and accurate (even if they result in contrasting conclusions).\n\n\n\n\n\n\n\n\n\nFigure 1.1: Planning Areas of Singapore\n\n\n\n\n\n\n\n\n\n\n\nFigure 1.2: Regions of Singapore\n\n\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\nThe statistical methodology to be applied will inherently depend on the type of spatial data that we have. Refer to Chapter 8 for the different statistical techniques covered.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction to Spatial Data</span>"
    ]
  },
  {
    "objectID": "introduction_to_spatial_data.html#types-of-spatial-data-practical-classification",
    "href": "introduction_to_spatial_data.html#types-of-spatial-data-practical-classification",
    "title": "1  Introduction to Spatial Data",
    "section": "1.4 Types of Spatial Data: Practical Classification",
    "text": "1.4 Types of Spatial Data: Practical Classification\nSpatial data is classified and contained in software programs such as R, ArcGIS etc. that handle spatial datasets in the following manner:\n\n\n\n\n\n\nNoteTypes of Spatial Data\n\n\n\n\n\n\n\n\n\n\n\nType\nDescription\nExample\n\n\n\n\nPoints\nA single point location.\nA GPS reading or a geo-coded address.\n\n\nLines\nA set of ordered points connected by straight-line segments.\nContour lines, road networks, or river networks.\n\n\nPolygons\nAn area marked by one or more enclosed lines.\nAdministrative regions, a collection of islands, or electoral districts.\n\n\nGrids/Raster\nA collection of rectangular cells organized in a regular lattice.\nSatellite imagery that registers data on a regular grid.\n\n\n\n\n\n\n\n\nTypes of Spatial Data: Practical Classification\n\n\nThe first three types (points, lines, and polygons), are collectively known as vector data. The geographic vector data model is based on observations located within a coordinate reference system (CRS). Observations can represent self-standing features (e.g., the location of a bus stop) or they can be linked together to form more complex geometries such as lines and polygons. Most vector geometries contain only 2-dimensions (3- dimensional CRSs contain an additional \\(z\\) value, e.g.: height above sea level, depth, etc).\n\n\n\nVector Dataset Example\n\n\n\n\n\n\n\n\nTip\n\n\n\nEPSG:4326 refers to the World Geodetic System, which is our typical longitude and latitude\n\n\n\n1.4.1 Point\nA point is composed of one coordinate pair representing a specific location in a coordinate system. Points are the most basic geometric primitives having no length or area.\n\n\n\nPoint\n\n\n\n\n1.4.2 Polyline\nA polyline is composed of a sequence of two or more coordinate pairs called vertices. Essentially, when we join 2 or more points, it becomes a polyline. A vertex is defined by coordinate pairs, just like a point, but what differentiates a vertex from a point is its explicitly defined relationship with neighbouring vertices. A vertex is connected to at least one other vertex. Roads and rivers are commonly stored as polylines\n\n\n\nPolyline\n\n\n\n\n1.4.3 Polygon\nA polygon is composed of three or more line segments whose starting and ending coordinate pairs are the same. Sometimes we will see the words lattice or areal unit used in lieu of polygon. The area that a polygon encloses is explicitly defined. If it isn’t, then we are working with a polyline feature. If this does not seem intuitive, we can think of three connected lines defining a triangle: they can represent three connected road segments (thus polyline features), or they can represent the grassy strip enclosed by the connected roads (in which case an ‘inside’ is implied thus defining a polygon).\n\n\n\nPolygon\n\n\n\n\n1.4.4 Raster Data\n\n\n\nRaster Dataset Example\n\n\nThe geographic raster data model usually consists of a raster header and a matrix (with rows and columns) representing equally spaced cells (often also called pixels or tiles). The raster header defines the coordinate reference system, the extent and the origin. The header defines the extent via the number of columns, the number of rows and the cell size resolution. Starting from the origin, we can access and modify each single cell by either using the cell ID or by specifying the rows and columns.\n\n\n\nZoom into Raster Data\n\n\nThis matrix representation avoids storing explicitly the coordinates for the four corner points (in fact it only stores one coordinate, namely the origin) of each cell corner as would be the case for rectangular vector polygons. This means that we are referencing our data with regards to the origin. This and map algebra makes raster processing much more efficient and faster than vector data processing (think of satellite imaging). In contrast to vector data, the cell of one raster layer can only hold a single value. The value might be numeric or categorical. Raster datasets are commonly used for representing and managing imagery, surface temperatures, digital elevation models, and numerous other entities.\n\n\n\nRaster Data in the Real World\n\n\n\n\n\n\n\n\nNote\n\n\n\nWorking with raster data tends to create more pixelated maps, as compared to vector maps\n\n\n\n\n\nVector vs Raster Data\n\n\n\n\n\n\n\n\nTipVector Data vs. Raster Data\n\n\n\n\n\n\n\n\n\n\n\nFeature\nVector Data\nRaster Data\n\n\n\n\nStructure\nHas discrete, well-defined borders and a high level of precision.\nDivides a surface into a regular grid of cells. Raster datasets are the basis of background images used in web-mapping and have been a vital source of geographic data since the origins of aerial photography and satellite-based remote sensing devices. Rasters aggregate spatially specific features to a given resolution.\n\n\nCommon Use\nTends to dominate the social sciences; human settlements have discrete borders.\nDominates environmental sciences due to reliance on remote sensing data.\n\n\nExamples\nGeo-coded addresses, roads, or administrative regions.\nSatellite imagery, aerial photography, or elevation models.\n\n\nFlexibility\nThere is much overlap in some fields and raster and vector datasets can be used together. Possible to convert between vector and raster formats. Ecologists and demographers commonly use both.\nThere is much overlap in some fields and raster and vector datasets can be used together. Possible to convert between raster and vector formats. Ecologists and demographers commonly use both.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction to Spatial Data</span>"
    ]
  },
  {
    "objectID": "introduction_to_spatial_data.html#spatial-data-file-formats",
    "href": "introduction_to_spatial_data.html#spatial-data-file-formats",
    "title": "1  Introduction to Spatial Data",
    "section": "1.5 Spatial Data File Formats",
    "text": "1.5 Spatial Data File Formats\n\n\n\n\n\n\nNoteData File Formats\n\n\n\n\n\n\n\n\n\n\nVector Data File Formats\nRaster Data File Formats\n\n\n\n\n• ESRI Shapefile: Popular format consisting of at least three files.\n• GeoTiff: Popular raster format. A TIFF file containing additional spatial metadata.\n\n\n• GeoJSON\n• File Geodatabase\n\n\n• KML: XML-based format for spatial visualization, developed for use with Google Earth.\n• Arc ASCII: Text format where the first six lines represent the raster header, followed by the raster cell values arranged in rows and columns.\n\n\n• GPX: XML schema created for exchange of GPS data.\n\n\n\n• File Geodatabase\n\n\n\n• GeoPackage\n\n\n\n\n\n\n\n1.5.1 ESRI Shapefile\nA shapefile is a file-based data format native to ArcView 3.x software (a much older version of ArcMap). It stores a collection of features that have the same geometry type (point, line, or polygon), the same attributes, and a common spatial extent (scale). Despite its name, a “single” shapefile is composed of at least three files, and as many as eight. Each file that makes up a “shapefile” has a common filename but different extension type. Each file has a specific role in defining a shapefile.\n\n\n\nERSI Shapefile\n\n\nWith this understanding of spatial data and the file formats that we will be working with in R, we can now take a closer look as to how to analyze spatial data using the sf() package.\n\n\n\n\nBivand, Roger S., Edzer Pebesma, and Virgilio Gomez-Rubio. n.d. “Sp: Classes and Methods for Spatial Data.” Accessed August 31, 2025. https://cran.r-project.org/web/packages/sp/vignettes/intro_sp.pdf.\n\n\nBrunsdon, Chris, and Lex Comber. n.d. “An Introduction to Sp and Sf: The Sf Revolution.” Accessed August 31, 2025. https://bookdown.org/lexcomber/brunsdoncomber2e/Ch3.html.\n\n\n“Coordinate Systems Worldwide.” n.d. Accessed August 31, 2025. https://epsg.io.\n\n\nGimond, M. n.d. “Feature Representation.” Accessed August 31, 2025. https://mgimond.github.io/Spatial/feature-representation.html.\n\n\nLovelace, Robin. n.d. “Spatial Classes.” Accessed August 31, 2025. https://geocompr.robinlovelace.net/spatial-class.html.\n\n\nLovelace, Robin, Jakub Nowosad, and Jannes Muenchow. 2022. Geocomputation with r. https://geocompr.robinlovelace.net.\n\n\n———. 2023a. “Geocomputation with R: Spatial Operations.” 2023. https://geocompr.robinlovelace.net/spatial-operations.html#spatial-vec.\n\n\n———. 2023b. “Geocomputation with R: Vector Attribute Manipulation.” 2023. https://geocompr.robinlovelace.net/attr.html#vector-attribute-manipulation.\n\n\nNowosad, Jakub. n.d. “spData Package for r.” Accessed September 5, 2025. https://nowosad.github.io/spData/.\n\n\nSchabenberger, Oliver, and Carol A. Gotway. 2005. Statistical Methods for Spatial Data Analysis. 1st ed. CRC Press.\n\n\n“Simple Features for r (Sf) Vignette.” n.d. Accessed August 31, 2025. https://r-spatial.github.io/sf/articles/.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction to Spatial Data</span>"
    ]
  },
  {
    "objectID": "Intro.html",
    "href": "Intro.html",
    "title": "2  Introduction to R",
    "section": "",
    "text": "2.1 Install ‘sf’ package\nWhen we start up our project, we will need to make sure we install and load the necessary packages. The ‘sf’ package should already be installed so we just need to load the ‘sf’ package from our library using the following code:\nis.element('sf', installed.packages())\n\n[1] TRUE\n\nlibrary(sf)\n\nLinking to GEOS 3.13.0, GDAL 3.8.5, PROJ 9.5.1; sf_use_s2() is TRUE",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Introduction to R</span>"
    ]
  },
  {
    "objectID": "Intro.html#reading-a-shapefile-geojson-and-csv-data-to-r",
    "href": "Intro.html#reading-a-shapefile-geojson-and-csv-data-to-r",
    "title": "2  Introduction to R",
    "section": "2.2 Reading a shapefile, geojson, and csv data to R",
    "text": "2.2 Reading a shapefile, geojson, and csv data to R\nWhen we load the dataset, we will need to use the st_read() command so as to read the file to R. This applies for both shapefiles and geojson files.\n\n2.2.1 Reading shapefile\n\nsg_pa = st_read(\"datasets/MP14_SUBZONE_WEB_PL.shp\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `/Users/rachelkheng/Documents/GitHub/ECON6027-Spatial-Econometrics-and-Data-Analysis-Notes/datasets/MP14_SUBZONE_WEB_PL.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\n\n\n2.2.2 Reading geojson file\n\nsg_spt = st_read(\"datasets/SportSGSportFacilitiesGEOJSON.geojson\")\n\nReading layer `SportSGSportFacilitiesGEOJSON' from data source \n  `/Users/rachelkheng/Documents/GitHub/ECON6027-Spatial-Econometrics-and-Data-Analysis-Notes/datasets/SportSGSportFacilitiesGEOJSON.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 35 features and 2 fields\nGeometry type: POLYGON\nDimension:     XYZ\nBounding box:  xmin: 103.6932 ymin: 1.285977 xmax: 103.9526 ymax: 1.435855\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n\n\n\n2.2.3 Reading csv data\n\nfav = read.csv(\"datasets/1c_data.csv\")\nclass(fav)\n\n[1] \"data.frame\"\n\nplot(fav)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nIt is important to note that while csv files are a spatial dataset, they do not have any “spatial awareness”. Thus, we need to use the command st_as_sf with the “coords” argument that follows the cartesian coordinates convention (x,y).\n\n\n\nlibrary(sf)\n(fav.sf = st_as_sf(fav, coords=c(\"lon_x\",\"lat_y\")))\n\nSimple feature collection with 9 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: -116 ymin: -71 xmax: 141 ymax: 90\nCRS:           NA\n  Name num    col        geometry\n1  ABC   3    red POINT (-10 -55)\n2  DEF   6 yellow  POINT (-52 -3)\n3  GHI   3   blue POINT (-116 73)\n4  JKL   8  green  POINT (-64 90)\n5  MNO   4 purple  POINT (136 48)\n6  PQR   7  black POINT (141 -71)\n7  STU  10  white  POINT (119 -5)\n8   VW   3   pink POINT (109 -29)\n9  XYZ   1 orange  POINT (-59 31)\n\nplot(st_geometry(fav.sf), main=\"Bucket List\")\n\n\n\n\n\n\n\n\n\n\n\nCSV Data\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nOne ‘sfg’ object contains only a single simple feature geometry\nA simple feature geometry column (‘sfc’) is a list of [‘sfg’{style=“color: red;”} objects, which is additionally able to contain information about the coordinate system in use\n\nThis is important since ‘sfc’ represents the geometry column in sf data frames.\n\n\n\n\n\n\n\n\nTipHow do I ensure R reads my files properly?\n\n\n\nIn case that your data set is not in the same folder as the Quarto file, use the file path instead to ensure that the file is read properly in R.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Introduction to R</span>"
    ]
  },
  {
    "objectID": "Intro.html#inspecting-our-shapefile-or-geojson-file",
    "href": "Intro.html#inspecting-our-shapefile-or-geojson-file",
    "title": "2  Introduction to R",
    "section": "2.3 Inspecting our shapefile or geojson file",
    "text": "2.3 Inspecting our shapefile or geojson file\nNow that we have loaded our dataset, we will need to inspect the data as we will need to make sure that there are no false entries. These false entries could be due to overlapping polygons. As a habit, we should always check the validity especially if the dataset is downloaded from the Internet.\n\n\n\n\n\n\nImportant\n\n\n\nAlways validate the dataset before we do anything else!\n\n\n\nclass(sg_pa)\n\n[1] \"sf\"         \"data.frame\"\n\nsummary(sg_pa)\n\n    OBJECTID       SUBZONE_NO      SUBZONE_N          SUBZONE_C        \n Min.   :  1.0   Min.   : 1.000   Length:323         Length:323        \n 1st Qu.: 81.5   1st Qu.: 2.000   Class :character   Class :character  \n Median :162.0   Median : 4.000   Mode  :character   Mode  :character  \n Mean   :162.0   Mean   : 4.625                                        \n 3rd Qu.:242.5   3rd Qu.: 6.500                                        \n Max.   :323.0   Max.   :17.000                                        \n    CA_IND           PLN_AREA_N         PLN_AREA_C          REGION_N        \n Length:323         Length:323         Length:323         Length:323        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n   REGION_C           INC_CRC            FMEL_UPD_D             X_ADDR     \n Length:323         Length:323         Min.   :2014-12-05   Min.   : 5093  \n Class :character   Class :character   1st Qu.:2014-12-05   1st Qu.:21864  \n Mode  :character   Mode  :character   Median :2014-12-05   Median :28465  \n                                       Mean   :2014-12-05   Mean   :27257  \n                                       3rd Qu.:2014-12-05   3rd Qu.:31674  \n                                       Max.   :2014-12-05   Max.   :50425  \n     Y_ADDR        SHAPE_Leng        SHAPE_Area                geometry  \n Min.   :19579   Min.   :  871.6   Min.   :   39438   MULTIPOLYGON :323  \n 1st Qu.:31776   1st Qu.: 3709.6   1st Qu.:  628261   epsg:NA      :  0  \n Median :35113   Median : 5211.9   Median : 1229894   +proj=tmer...:  0  \n Mean   :36106   Mean   : 6524.4   Mean   : 2420882                      \n 3rd Qu.:39869   3rd Qu.: 6942.6   3rd Qu.: 2106483                      \n Max.   :49553   Max.   :68083.9   Max.   :69748299                      \n\nhead(sg_pa)\n\nSimple feature collection with 6 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 24468.89 ymin: 28369.47 xmax: 32362.39 ymax: 30542.74\nProjected CRS: SVY21\n  OBJECTID SUBZONE_NO      SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1        1          1   MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2        2          1   PEARL'S HILL    OTSZ01      Y          OUTRAM\n3        3          3      BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4        4          8 HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5        5          3        REDHILL    BMSZ03      N     BUKIT MERAH\n6        6          7 ALEXANDRA HILL    BMSZ07      N     BUKIT MERAH\n  PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1         MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2         OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3         SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4         BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5         BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n6         BM CENTRAL REGION       CR 9D286521EF5E3B59 2014-12-05 25358.82\n    Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n1 29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2 29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3 29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n4 29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n5 30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30...\n6 29991.38   4428.913  1030378.8 MULTIPOLYGON (((25899.7 297...\n\ntable(st_is_valid(sg_pa))\n\n\nFALSE  TRUE \n    9   314 \n\n\n\n\n\n\n\n\nNoteWhat do the commands mean?\n\n\n\n\nclass(sg_pa): Used to determine the class of the object, e.g., data.frame.\nsummary(sg_pa): Calculates a 6-number summary including the minimum value, first quartile (25th percentile), median (50th percentile), mean, third quartile (75th percentile), and maximum value.\nhead(sg_pa): Inspects the first 6 rows of the dataset.\ntable(st_is_valid(sg_pa)): Creates a table for the object and checks the validity of the object.\n\n\n\n\n2.3.1 Validating objects due to false entries\nIf there are false entries, use the command st_make_valid() to validate the object.\n\nsg_pa = st_make_valid(sg_pa)\ntable(st_is_valid(sg_pa))\n\n\nTRUE \n 323 \n\n\n\n\n\n\n\n\nNoteWhat do the commands mean?\n\n\n\n\nsg_pa = st_make_valid(sg_pa): Used for making the object valid.\ntable(st_is_valid(sg_pa)): Used for creating a table from the newly validated object.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Introduction to R</span>"
    ]
  },
  {
    "objectID": "Intro.html#visualize-the-shapefile-and-geojson-file",
    "href": "Intro.html#visualize-the-shapefile-and-geojson-file",
    "title": "2  Introduction to R",
    "section": "2.4 Visualize the shapefile and geojson file",
    "text": "2.4 Visualize the shapefile and geojson file\nNow, we can visualize our dataset in the form of maps by using the plot() command. If there are many attributes in the dataset, we can use the max.plot() command together with the plot() command to limit the number of maps generated. If we wish to plot a map using a specific attribute, then we need to specify the attribute in the plot() command.\n\n2.4.1 Shapefile\n\nplot(sg_pa, max.plot = 12)\n\n\n\n\n\n\n\nplot(sg_pa[\"PLN_AREA_N\"])\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNoteWhat do the commands mean?\n\n\n\n\nplot(sg_pa, max.plot = 12): Plots our object; the max.plot function generates the number of maps specified (e.g., 12).\nplot(sg_pa[\"PLN_AREA_N\"]): Plots our object based on the specified attribute we want (e.g., PLN_AREA_N).\n\n\n\n\n\n2.4.2 geojson file\nBefore we can plot our dataset, we will need to extract the geometry for our geojson file. This is so that we can seoarate the spatial data freom other attribute information, allowing us to visualize, process, and interact with the geographic shapes (points, lines, polygons) using R. This process is necessary because geometry is what defines the map features, and extracting it provides a clean dataset for tasks like rendering maps, performing spatial analysis, or exchanging data between different platforms.\n\nst_geometry(sg_spt)\n\nGeometry set for 35 features \nGeometry type: POLYGON\nDimension:     XYZ\nBounding box:  xmin: 103.6932 ymin: 1.285977 xmax: 103.9526 ymax: 1.435855\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\nFirst 5 geometries:\n\n\nPOLYGON Z ((103.7628 1.310547 0, 103.7628 1.310...\n\n\nPOLYGON Z ((103.7644 1.311377 0, 103.7646 1.311...\n\n\nPOLYGON Z ((103.6937 1.33894 0, 103.6937 1.3389...\n\n\nPOLYGON Z ((103.8723 1.323252 0, 103.8723 1.323...\n\n\nPOLYGON Z ((103.8774 1.306804 0, 103.8787 1.306...\n\n\n\n\n\n\n\n\nNoteWhat do the commands mean?\n\n\n\n\nst_geometry(sg_spt): Extracts the geometry.\n\n\n\nAfter extracting the geometry, we can now plot the spatial data. To add colour to our plots, we can make use of the command col = “colour” as well as border = “colour” so that the plots are filled in colour. Additionally, the command main = “title” will create a title for the plot.\n\nplot(sg_spt$geometry, col = \"green\", border = \"darkblue\", main=\"SportSG Sport Facilities Locations\")\n\n\n\n\n\n\n\n\nLastly, to load the plot of the dengue clusters on the Singapore map, we can make use of the library tmap as well as the command tm_shape(), which specifies the spatial data object or “shape” that serves as the base layer for creating a thematic map. Essentially, this defines the spatial context for subsequent map layers. Then, we use the tm_polygons() command to draw polygons on top of the map layer. Finally, to view the map that we have created, we use the command tmap_mode() where we can set the mode to (i) plot, which creates default and static maps, while (ii) view creates interactive maps that can be zoomed in and out, allow for changing background tiles (basemaps), or click on map objects to get some additional information.\n\nlibrary(tmap)\nsploc_map = tm_shape(sg_spt$geometry) + tm_polygons(col = \"green\")\ntmap_mode(\"view\")\n\nℹ tmap mode set to \"view\".\n\nsploc_map\n\n\n\n\n\n\n\n\n\n\n\nNoteWhat do the commands mean?\n\n\n\n\ntmap package is used for creating thematic maps.\nThe following commands create a base map and an interactive view:\n\ntm_shape: Specifies the spatial data object for the base layer and creates polygons on top of the map layer.\ntmap_mode: Sets the created map to be an interactive map.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Introduction to R</span>"
    ]
  },
  {
    "objectID": "Intro.html#working-with-csv-data",
    "href": "Intro.html#working-with-csv-data",
    "title": "2  Introduction to R",
    "section": "2.5 Working with csv data",
    "text": "2.5 Working with csv data\nWe will need to install the package spData and load our csv dataset as an sf object. When we look at sf class datasets, we need to identify the difference between attributes and features.\n\n2.5.1 Attributes vs Features\nAttribute data is “non-spatial” information associated with geographic (geometry) data.\n\n\n\n\n\n\n\nGeometry Data (Spatial)\nAttribute Data (Non-Spatial)\n\n\n\n\nA bus stop’s position would typically be represented by latitude and longitude coordinates (geometry data).\nThe name of the bus stop is an attribute of the feature (to use Simple Features terminology) that bears no relation to its geometry.\n\n\nThe position of a specific grid cell in raster data.\nThe elevation value (attribute) for that specific grid cell.\n\n\n\n\n\n2.5.2 Feature types supported by sf\n\n\n\nFeature types supported by sf\n\n\n\n2.5.2.1 Geometry Column\nThe geometry column gives the sf object its “spatial awareness”. It is a list column that contains all the coordinates of the country polygons. When we strp the geometry data from an sf column, it reduces to a typical data.frame. We can observe this through the following example:\n\n2.5.2.1.1 Step 1: Loading and inspecting the “world” dataset\n\nworld = st_read(system.file(\"shapes/world.gpkg\", package=\"spData\"))\n\nReading layer `world' from data source \n  `/Library/Frameworks/R.framework/Versions/4.5-arm64/Resources/library/spData/shapes/world.gpkg' \n  using driver `GPKG'\nSimple feature collection with 177 features and 10 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -180 ymin: -89.9 xmax: 180 ymax: 83.64513\nGeodetic CRS:  WGS 84\n\nworld\n\nSimple feature collection with 177 features and 10 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -180 ymin: -89.9 xmax: 180 ymax: 83.64513\nGeodetic CRS:  WGS 84\nFirst 10 features:\n   iso_a2        name_long     continent region_un          subregion\n1      FJ             Fiji       Oceania   Oceania          Melanesia\n2      TZ         Tanzania        Africa    Africa     Eastern Africa\n3      EH   Western Sahara        Africa    Africa    Northern Africa\n4      CA           Canada North America  Americas   Northern America\n5      US    United States North America  Americas   Northern America\n6      KZ       Kazakhstan          Asia      Asia       Central Asia\n7      UZ       Uzbekistan          Asia      Asia       Central Asia\n8      PG Papua New Guinea       Oceania   Oceania          Melanesia\n9      ID        Indonesia          Asia      Asia South-Eastern Asia\n10     AR        Argentina South America  Americas      South America\n                type    area_km2       pop  lifeExp gdpPercap\n1  Sovereign country    19289.97    885806 69.96000  8222.254\n2  Sovereign country   932745.79  52234869 64.16300  2402.099\n3      Indeterminate    96270.60        NA       NA        NA\n4  Sovereign country 10036042.98  35535348 81.95305 43079.143\n5            Country  9510743.74 318622525 78.84146 51921.985\n6  Sovereign country  2729810.51  17288285 71.62000 23587.338\n7  Sovereign country   461410.26  30757700 71.03900  5370.866\n8  Sovereign country   464520.07   7755785 65.23000  3709.082\n9  Sovereign country  1819251.33 255131116 68.85600 10003.089\n10 Sovereign country  2784468.59  42981515 76.25200 18797.548\n                             geom\n1  MULTIPOLYGON (((-180 -16.55...\n2  MULTIPOLYGON (((33.90371 -0...\n3  MULTIPOLYGON (((-8.66559 27...\n4  MULTIPOLYGON (((-132.71 54....\n5  MULTIPOLYGON (((-171.7317 6...\n6  MULTIPOLYGON (((87.35997 49...\n7  MULTIPOLYGON (((55.96819 41...\n8  MULTIPOLYGON (((141.0002 -2...\n9  MULTIPOLYGON (((104.37 -1.0...\n10 MULTIPOLYGON (((-68.63401 -...\n\n\n\n\n2.5.2.1.2 Step 2: Inspecting the dataset\n\ntable(st_is_valid(world))\n\n\nTRUE \n 177 \n\nclass(world)\n\n[1] \"sf\"         \"data.frame\"\n\ndim(world) # 177 features, 11 attributes\n\n[1] 177  11\n\nnames(world)\n\n [1] \"iso_a2\"    \"name_long\" \"continent\" \"region_un\" \"subregion\" \"type\"     \n [7] \"area_km2\"  \"pop\"       \"lifeExp\"   \"gdpPercap\" \"geom\"     \n\nsummary(world)\n\n    iso_a2           name_long          continent          region_un        \n Length:177         Length:177         Length:177         Length:177        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n  subregion             type              area_km2             pop           \n Length:177         Length:177         Min.   :    2417   Min.   :5.630e+04  \n Class :character   Class :character   1st Qu.:   46185   1st Qu.:3.755e+06  \n Mode  :character   Mode  :character   Median :  185004   Median :1.040e+07  \n                                       Mean   :  832558   Mean   :4.282e+07  \n                                       3rd Qu.:  621860   3rd Qu.:3.075e+07  \n                                       Max.   :17018507   Max.   :1.364e+09  \n                                                          NA's   :10         \n    lifeExp        gdpPercap                   geom    \n Min.   :50.62   Min.   :   597.1   MULTIPOLYGON :177  \n 1st Qu.:64.96   1st Qu.:  3752.4   epsg:4326    :  0  \n Median :72.87   Median : 10734.1   +proj=long...:  0  \n Mean   :70.85   Mean   : 17106.0                      \n 3rd Qu.:76.78   3rd Qu.: 24232.7                      \n Max.   :83.59   Max.   :120860.1                      \n NA's   :10      NA's   :17                            \n\nhead(world)\n\nSimple feature collection with 6 features and 10 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -180 ymin: -18.28799 xmax: 180 ymax: 83.23324\nGeodetic CRS:  WGS 84\n  iso_a2      name_long     continent region_un        subregion\n1     FJ           Fiji       Oceania   Oceania        Melanesia\n2     TZ       Tanzania        Africa    Africa   Eastern Africa\n3     EH Western Sahara        Africa    Africa  Northern Africa\n4     CA         Canada North America  Americas Northern America\n5     US  United States North America  Americas Northern America\n6     KZ     Kazakhstan          Asia      Asia     Central Asia\n               type    area_km2       pop  lifeExp gdpPercap\n1 Sovereign country    19289.97    885806 69.96000  8222.254\n2 Sovereign country   932745.79  52234869 64.16300  2402.099\n3     Indeterminate    96270.60        NA       NA        NA\n4 Sovereign country 10036042.98  35535348 81.95305 43079.143\n5           Country  9510743.74 318622525 78.84146 51921.985\n6 Sovereign country  2729810.51  17288285 71.62000 23587.338\n                            geom\n1 MULTIPOLYGON (((-180 -16.55...\n2 MULTIPOLYGON (((33.90371 -0...\n3 MULTIPOLYGON (((-8.66559 27...\n4 MULTIPOLYGON (((-132.71 54....\n5 MULTIPOLYGON (((-171.7317 6...\n6 MULTIPOLYGON (((87.35997 49...\n\n\n\n\n2.5.2.1.3 Step 3: Removing geometry column from dataset\n\nworld$geom\n\nGeometry set for 177 features \nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -180 ymin: -89.9 xmax: 180 ymax: 83.64513\nGeodetic CRS:  WGS 84\nFirst 5 geometries:\n\n\nMULTIPOLYGON (((-180 -16.55522, -179.9174 -16.5...\n\n\nMULTIPOLYGON (((33.90371 -0.95, 31.86617 -1.027...\n\n\nMULTIPOLYGON (((-8.66559 27.65643, -8.817828 27...\n\n\nMULTIPOLYGON (((-132.71 54.04001, -133.18 54.16...\n\n\nMULTIPOLYGON (((-171.7317 63.78252, -171.7911 6...\n\nworld_df = st_drop_geometry(world)\nclass(world_df)\n\n[1] \"data.frame\"\n\nhead(world_df)\n\n  iso_a2      name_long     continent region_un        subregion\n1     FJ           Fiji       Oceania   Oceania        Melanesia\n2     TZ       Tanzania        Africa    Africa   Eastern Africa\n3     EH Western Sahara        Africa    Africa  Northern Africa\n4     CA         Canada North America  Americas Northern America\n5     US  United States North America  Americas Northern America\n6     KZ     Kazakhstan          Asia      Asia     Central Asia\n               type    area_km2       pop  lifeExp gdpPercap\n1 Sovereign country    19289.97    885806 69.96000  8222.254\n2 Sovereign country   932745.79  52234869 64.16300  2402.099\n3     Indeterminate    96270.60        NA       NA        NA\n4 Sovereign country 10036042.98  35535348 81.95305 43079.143\n5           Country  9510743.74 318622525 78.84146 51921.985\n6 Sovereign country  2729810.51  17288285 71.62000 23587.338\n\n\n\n\n2.5.2.1.4 Initial plots\n\n# plot(world)\nplot(world[3:6]) # plot of the world for attributes 3 to 6\n\n\n\n\n\n\n\n\n\n\n2.5.2.1.5 Basic plot of the countries and continents based on column name\n\nplot(world[c(\"name_long\", \"continent\")]) # identify the columns using concatenate function to list into an array\n\n\n\n\n\n\n\n\n\n\n\n\n2.5.3 Spatial Dataset Manipulation\nIn this section we will see some important ways to manipulate a spatial dataset. Most of these commands can be applied to any dataset in general.\n\n2.5.3.1 Subsetting using base R functions [] or subset()\nThe following code chunk shows how to subset based on columns.\n\nworld[, 7:10] # Extract columns 7 to 10\n\nSimple feature collection with 177 features and 4 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -180 ymin: -89.9 xmax: 180 ymax: 83.64513\nGeodetic CRS:  WGS 84\nFirst 10 features:\n      area_km2       pop  lifeExp gdpPercap                           geom\n1     19289.97    885806 69.96000  8222.254 MULTIPOLYGON (((-180 -16.55...\n2    932745.79  52234869 64.16300  2402.099 MULTIPOLYGON (((33.90371 -0...\n3     96270.60        NA       NA        NA MULTIPOLYGON (((-8.66559 27...\n4  10036042.98  35535348 81.95305 43079.143 MULTIPOLYGON (((-132.71 54....\n5   9510743.74 318622525 78.84146 51921.985 MULTIPOLYGON (((-171.7317 6...\n6   2729810.51  17288285 71.62000 23587.338 MULTIPOLYGON (((87.35997 49...\n7    461410.26  30757700 71.03900  5370.866 MULTIPOLYGON (((55.96819 41...\n8    464520.07   7755785 65.23000  3709.082 MULTIPOLYGON (((141.0002 -2...\n9   1819251.33 255131116 68.85600 10003.089 MULTIPOLYGON (((104.37 -1.0...\n10  2784468.59  42981515 76.25200 18797.548 MULTIPOLYGON (((-68.63401 -...\n\nsummary(world[, 7:10]) # numerical summary of the columns\n\n    area_km2             pop               lifeExp        gdpPercap       \n Min.   :    2417   Min.   :5.630e+04   Min.   :50.62   Min.   :   597.1  \n 1st Qu.:   46185   1st Qu.:3.755e+06   1st Qu.:64.96   1st Qu.:  3752.4  \n Median :  185004   Median :1.040e+07   Median :72.87   Median : 10734.1  \n Mean   :  832558   Mean   :4.282e+07   Mean   :70.85   Mean   : 17106.0  \n 3rd Qu.:  621860   3rd Qu.:3.075e+07   3rd Qu.:76.78   3rd Qu.: 24232.7  \n Max.   :17018507   Max.   :1.364e+09   Max.   :83.59   Max.   :120860.1  \n                    NA's   :10          NA's   :10      NA's   :17        \n            geom    \n MULTIPOLYGON :177  \n epsg:4326    :  0  \n +proj=long...:  0  \n                    \n                    \n                    \n                    \n\n\nThe following code chunk allows subsetting based on certain criterion: lad area more than 5 million square km.\n\n2.5.3.1.1 Method 1\n\nl_area = world$area_km2 &gt; 5000000\nclass(l_area)\n\n[1] \"logical\"\n\ntable(l_area)\n\nl_area\nFALSE  TRUE \n  170     7 \n\n(big_countries = world[l_area, ])\n\nSimple feature collection with 7 features and 10 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -180 ymin: -89.9 xmax: 180 ymax: 83.23324\nGeodetic CRS:  WGS 84\n    iso_a2          name_long     continent  region_un\n4       CA             Canada North America   Americas\n5       US      United States North America   Americas\n19      RU Russian Federation        Europe     Europe\n30      BR             Brazil South America   Americas\n138     AU          Australia       Oceania    Oceania\n140     CN              China          Asia       Asia\n160     AQ         Antarctica    Antarctica Antarctica\n                    subregion              type area_km2        pop  lifeExp\n4            Northern America Sovereign country 10036043   35535348 81.95305\n5            Northern America           Country  9510744  318622525 78.84146\n19             Eastern Europe Sovereign country 17018507  143819666 70.74366\n30              South America Sovereign country  8508557  204213133 75.04200\n138 Australia and New Zealand           Country  7687614   23504138 82.30000\n140              Eastern Asia           Country  9409830 1364270000 75.93200\n160                Antarctica     Indeterminate 12335956         NA       NA\n    gdpPercap                           geom\n4    43079.14 MULTIPOLYGON (((-132.71 54....\n5    51921.98 MULTIPOLYGON (((-171.7317 6...\n19   25284.59 MULTIPOLYGON (((180 70.8322...\n30   15374.26 MULTIPOLYGON (((-53.37366 -...\n138  43547.20 MULTIPOLYGON (((126.1487 -3...\n140  12758.65 MULTIPOLYGON (((80.25999 42...\n160        NA MULTIPOLYGON (((-180 -89.9,...\n\n\n\n\n2.5.3.1.2 Method 2\n\n(big_countries = subset(world, area_km2 &gt; 5000000)) # method 2\n\nSimple feature collection with 7 features and 10 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -180 ymin: -89.9 xmax: 180 ymax: 83.23324\nGeodetic CRS:  WGS 84\n    iso_a2          name_long     continent  region_un\n4       CA             Canada North America   Americas\n5       US      United States North America   Americas\n19      RU Russian Federation        Europe     Europe\n30      BR             Brazil South America   Americas\n138     AU          Australia       Oceania    Oceania\n140     CN              China          Asia       Asia\n160     AQ         Antarctica    Antarctica Antarctica\n                    subregion              type area_km2        pop  lifeExp\n4            Northern America Sovereign country 10036043   35535348 81.95305\n5            Northern America           Country  9510744  318622525 78.84146\n19             Eastern Europe Sovereign country 17018507  143819666 70.74366\n30              South America Sovereign country  8508557  204213133 75.04200\n138 Australia and New Zealand           Country  7687614   23504138 82.30000\n140              Eastern Asia           Country  9409830 1364270000 75.93200\n160                Antarctica     Indeterminate 12335956         NA       NA\n    gdpPercap                           geom\n4    43079.14 MULTIPOLYGON (((-132.71 54....\n5    51921.98 MULTIPOLYGON (((-171.7317 6...\n19   25284.59 MULTIPOLYGON (((180 70.8322...\n30   15374.26 MULTIPOLYGON (((-53.37366 -...\n138  43547.20 MULTIPOLYGON (((126.1487 -3...\n140  12758.65 MULTIPOLYGON (((80.25999 42...\n160        NA MULTIPOLYGON (((-180 -89.9,...\n\n\nSince Antartica is not a country, we will remove it from the dataset.\n\n(big_countries = big_countries[-7, ]) # remove Antarctica\n\nSimple feature collection with 6 features and 10 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -180 ymin: -43.6346 xmax: 180 ymax: 83.23324\nGeodetic CRS:  WGS 84\n    iso_a2          name_long     continent region_un                 subregion\n4       CA             Canada North America  Americas          Northern America\n5       US      United States North America  Americas          Northern America\n19      RU Russian Federation        Europe    Europe            Eastern Europe\n30      BR             Brazil South America  Americas             South America\n138     AU          Australia       Oceania   Oceania Australia and New Zealand\n140     CN              China          Asia      Asia              Eastern Asia\n                 type area_km2        pop  lifeExp gdpPercap\n4   Sovereign country 10036043   35535348 81.95305  43079.14\n5             Country  9510744  318622525 78.84146  51921.98\n19  Sovereign country 17018507  143819666 70.74366  25284.59\n30  Sovereign country  8508557  204213133 75.04200  15374.26\n138           Country  7687614   23504138 82.30000  43547.20\n140           Country  9409830 1364270000 75.93200  12758.65\n                              geom\n4   MULTIPOLYGON (((-132.71 54....\n5   MULTIPOLYGON (((-171.7317 6...\n19  MULTIPOLYGON (((180 70.8322...\n30  MULTIPOLYGON (((-53.37366 -...\n138 MULTIPOLYGON (((126.1487 -3...\n140 MULTIPOLYGON (((80.25999 42...\n\n\nIn the next chunk, we will extract and highlight Asia (a specific geographic location) in a map. Using [] is one way to subset a dataset. Notice the resulting dataset is also an sf object.\n\ntable(world$continent)\n\n\n                 Africa              Antarctica                    Asia \n                     51                       1                      47 \n                 Europe           North America                 Oceania \n                     39                      18                       7 \nSeven seas (open ocean)           South America \n                      1                      13 \n\nasia = world[world$continent == \"Asia\", ] \nplot(world[\"continent\"], reset = F) \nplot(asia, add = T, col = \"black\")\n\nWarning in plot.sf(asia, add = T, col = \"black\"): ignoring all but the first\nattribute\n\n\n\n\n\n\n\n\n\n\n\n2.5.3.1.3 Plotting a country (e.g. Sri Lanka)\n\nworld$name_long \n\n  [1] \"Fiji\"                               \n  [2] \"Tanzania\"                           \n  [3] \"Western Sahara\"                     \n  [4] \"Canada\"                             \n  [5] \"United States\"                      \n  [6] \"Kazakhstan\"                         \n  [7] \"Uzbekistan\"                         \n  [8] \"Papua New Guinea\"                   \n  [9] \"Indonesia\"                          \n [10] \"Argentina\"                          \n [11] \"Chile\"                              \n [12] \"Democratic Republic of the Congo\"   \n [13] \"Somalia\"                            \n [14] \"Kenya\"                              \n [15] \"Sudan\"                              \n [16] \"Chad\"                               \n [17] \"Haiti\"                              \n [18] \"Dominican Republic\"                 \n [19] \"Russian Federation\"                 \n [20] \"Bahamas\"                            \n [21] \"Falkland Islands\"                   \n [22] \"Norway\"                             \n [23] \"Greenland\"                          \n [24] \"French Southern and Antarctic Lands\"\n [25] \"Timor-Leste\"                        \n [26] \"South Africa\"                       \n [27] \"Lesotho\"                            \n [28] \"Mexico\"                             \n [29] \"Uruguay\"                            \n [30] \"Brazil\"                             \n [31] \"Bolivia\"                            \n [32] \"Peru\"                               \n [33] \"Colombia\"                           \n [34] \"Panama\"                             \n [35] \"Costa Rica\"                         \n [36] \"Nicaragua\"                          \n [37] \"Honduras\"                           \n [38] \"El Salvador\"                        \n [39] \"Guatemala\"                          \n [40] \"Belize\"                             \n [41] \"Venezuela\"                          \n [42] \"Guyana\"                             \n [43] \"Suriname\"                           \n [44] \"France\"                             \n [45] \"Ecuador\"                            \n [46] \"Puerto Rico\"                        \n [47] \"Jamaica\"                            \n [48] \"Cuba\"                               \n [49] \"Zimbabwe\"                           \n [50] \"Botswana\"                           \n [51] \"Namibia\"                            \n [52] \"Senegal\"                            \n [53] \"Mali\"                               \n [54] \"Mauritania\"                         \n [55] \"Benin\"                              \n [56] \"Niger\"                              \n [57] \"Nigeria\"                            \n [58] \"Cameroon\"                           \n [59] \"Togo\"                               \n [60] \"Ghana\"                              \n [61] \"Côte d'Ivoire\"                      \n [62] \"Guinea\"                             \n [63] \"Guinea-Bissau\"                      \n [64] \"Liberia\"                            \n [65] \"Sierra Leone\"                       \n [66] \"Burkina Faso\"                       \n [67] \"Central African Republic\"           \n [68] \"Republic of the Congo\"              \n [69] \"Gabon\"                              \n [70] \"Equatorial Guinea\"                  \n [71] \"Zambia\"                             \n [72] \"Malawi\"                             \n [73] \"Mozambique\"                         \n [74] \"eSwatini\"                           \n [75] \"Angola\"                             \n [76] \"Burundi\"                            \n [77] \"Israel\"                             \n [78] \"Lebanon\"                            \n [79] \"Madagascar\"                         \n [80] \"Palestine\"                          \n [81] \"The Gambia\"                         \n [82] \"Tunisia\"                            \n [83] \"Algeria\"                            \n [84] \"Jordan\"                             \n [85] \"United Arab Emirates\"               \n [86] \"Qatar\"                              \n [87] \"Kuwait\"                             \n [88] \"Iraq\"                               \n [89] \"Oman\"                               \n [90] \"Vanuatu\"                            \n [91] \"Cambodia\"                           \n [92] \"Thailand\"                           \n [93] \"Lao PDR\"                            \n [94] \"Myanmar\"                            \n [95] \"Vietnam\"                            \n [96] \"Dem. Rep. Korea\"                    \n [97] \"Republic of Korea\"                  \n [98] \"Mongolia\"                           \n [99] \"India\"                              \n[100] \"Bangladesh\"                         \n[101] \"Bhutan\"                             \n[102] \"Nepal\"                              \n[103] \"Pakistan\"                           \n[104] \"Afghanistan\"                        \n[105] \"Tajikistan\"                         \n[106] \"Kyrgyzstan\"                         \n[107] \"Turkmenistan\"                       \n[108] \"Iran\"                               \n[109] \"Syria\"                              \n[110] \"Armenia\"                            \n[111] \"Sweden\"                             \n[112] \"Belarus\"                            \n[113] \"Ukraine\"                            \n[114] \"Poland\"                             \n[115] \"Austria\"                            \n[116] \"Hungary\"                            \n[117] \"Moldova\"                            \n[118] \"Romania\"                            \n[119] \"Lithuania\"                          \n[120] \"Latvia\"                             \n[121] \"Estonia\"                            \n[122] \"Germany\"                            \n[123] \"Bulgaria\"                           \n[124] \"Greece\"                             \n[125] \"Turkey\"                             \n[126] \"Albania\"                            \n[127] \"Croatia\"                            \n[128] \"Switzerland\"                        \n[129] \"Luxembourg\"                         \n[130] \"Belgium\"                            \n[131] \"Netherlands\"                        \n[132] \"Portugal\"                           \n[133] \"Spain\"                              \n[134] \"Ireland\"                            \n[135] \"New Caledonia\"                      \n[136] \"Solomon Islands\"                    \n[137] \"New Zealand\"                        \n[138] \"Australia\"                          \n[139] \"Sri Lanka\"                          \n[140] \"China\"                              \n[141] \"Taiwan\"                             \n[142] \"Italy\"                              \n[143] \"Denmark\"                            \n[144] \"United Kingdom\"                     \n[145] \"Iceland\"                            \n[146] \"Azerbaijan\"                         \n[147] \"Georgia\"                            \n[148] \"Philippines\"                        \n[149] \"Malaysia\"                           \n[150] \"Brunei Darussalam\"                  \n[151] \"Slovenia\"                           \n[152] \"Finland\"                            \n[153] \"Slovakia\"                           \n[154] \"Czech Republic\"                     \n[155] \"Eritrea\"                            \n[156] \"Japan\"                              \n[157] \"Paraguay\"                           \n[158] \"Yemen\"                              \n[159] \"Saudi Arabia\"                       \n[160] \"Antarctica\"                         \n[161] \"Northern Cyprus\"                    \n[162] \"Cyprus\"                             \n[163] \"Morocco\"                            \n[164] \"Egypt\"                              \n[165] \"Libya\"                              \n[166] \"Ethiopia\"                           \n[167] \"Djibouti\"                           \n[168] \"Somaliland\"                         \n[169] \"Uganda\"                             \n[170] \"Rwanda\"                             \n[171] \"Bosnia and Herzegovina\"             \n[172] \"Macedonia\"                          \n[173] \"Serbia\"                             \n[174] \"Montenegro\"                         \n[175] \"Kosovo\"                             \n[176] \"Trinidad and Tobago\"                \n[177] \"South Sudan\"                        \n\n(sl = world[world$name_long == \"Sri Lanka\", ])\n\nSimple feature collection with 1 feature and 10 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 79.69517 ymin: 5.96837 xmax: 81.78796 ymax: 9.824078\nGeodetic CRS:  WGS 84\n    iso_a2 name_long continent region_un     subregion              type\n139     LK Sri Lanka      Asia      Asia Southern Asia Sovereign country\n    area_km2      pop lifeExp gdpPercap                           geom\n139 65370.39 20771000  74.906  10650.39 MULTIPOLYGON (((81.78796 7....\n\nplot(asia$geom, main=\"Asia\")\nplot(st_geometry(sl), col = \"red\", add=T)\n\n\n\n\n\n\n\n\nplot(st_geometry()) gives an outline of the geometry column.\n\n\n\n2.5.3.2 Attribute data aggregation\nAggregation operations summarise datasets by a ‘grouping variable’, typically an attribute column. In the following example, we aggregate the population by continent.\n\n(cont_pop = aggregate(pop ~ continent, FUN = sum, data = world, na.rm = T)); class(cont_pop) # output is a data.frame\n\n      continent        pop\n1        Africa 1154946633\n2          Asia 4311408059\n3        Europe  669036256\n4 North America  565028684\n5       Oceania   37757833\n6 South America  412060811\n\n\n[1] \"data.frame\"\n\n(cont_pop2 = aggregate(world['pop'], by = list(world$continent), FUN = sum, na.rm = T)); class(cont_pop2) # results in an sf output\n\nSimple feature collection with 8 features and 2 fields\nAttribute-geometry relationships: aggregate (1), identity (1)\nGeometry type: GEOMETRY\nDimension:     XY\nBounding box:  xmin: -180 ymin: -89.9 xmax: 180 ymax: 83.64513\nGeodetic CRS:  WGS 84\n                  Group.1        pop                       geometry\n1                  Africa 1154946633 MULTIPOLYGON (((-11.43878 6...\n2              Antarctica          0 MULTIPOLYGON (((-61.13898 -...\n3                    Asia 4311408059 MULTIPOLYGON (((48.67923 14...\n4                  Europe  669036256 MULTIPOLYGON (((-53.55484 2...\n5           North America  565028684 MULTIPOLYGON (((-155.2222 1...\n6                 Oceania   37757833 MULTIPOLYGON (((147.9141 -4...\n7 Seven seas (open ocean)          0 POLYGON ((68.935 -48.625, 6...\n8           South America  412060811 MULTIPOLYGON (((-68.63999 -...\n\n\n[1] \"sf\"         \"data.frame\"\n\n# (cont_pop2 = aggregate(world$pop, by = list(world$continent), FUN = sum, na.rm = T)); class(cont_pop2)\n\n\n\n2.5.3.3 Attribute joining using “key variable”\nThe idea is to join data from different sources. This is useful when we want to “give” spatial awareness to a dataset. In the following example, we will use the “coffee_data” dataset from spData and join that to the “world” dataset using the key variable “name_long”.\n\nlibrary(spData)\n\nTo access larger datasets in this package, install the spDataLarge\npackage with: `install.packages('spDataLarge',\nrepos='https://nowosad.github.io/drat/', type='source')`\n\n\n\nAttaching package: 'spData'\n\n\nThe following object is masked _by_ '.GlobalEnv':\n\n    world\n\nsummary(coffee_data)\n\n  name_long         coffee_production_2016 coffee_production_2017\n Length:47          Min.   :   1.0         Min.   :   1.00       \n Class :character   1st Qu.:   3.0         1st Qu.:   3.75       \n Mode  :character   Median :  36.5         Median :  40.00       \n                    Mean   : 261.3         Mean   : 250.53       \n                    3rd Qu.: 140.2         3rd Qu.: 178.75       \n                    Max.   :3277.0         Max.   :2786.00       \n                    NA's   :9              NA's   :11            \n\nclass(coffee_data)\n\n[1] \"tbl_df\"     \"tbl\"        \"data.frame\"\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n# left join\n(world_coffee = left_join(world, coffee_data))\n\nJoining with `by = join_by(name_long)`\n\n\nSimple feature collection with 177 features and 12 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -180 ymin: -89.9 xmax: 180 ymax: 83.64513\nGeodetic CRS:  WGS 84\nFirst 10 features:\n   iso_a2        name_long     continent region_un          subregion\n1      FJ             Fiji       Oceania   Oceania          Melanesia\n2      TZ         Tanzania        Africa    Africa     Eastern Africa\n3      EH   Western Sahara        Africa    Africa    Northern Africa\n4      CA           Canada North America  Americas   Northern America\n5      US    United States North America  Americas   Northern America\n6      KZ       Kazakhstan          Asia      Asia       Central Asia\n7      UZ       Uzbekistan          Asia      Asia       Central Asia\n8      PG Papua New Guinea       Oceania   Oceania          Melanesia\n9      ID        Indonesia          Asia      Asia South-Eastern Asia\n10     AR        Argentina South America  Americas      South America\n                type    area_km2       pop  lifeExp gdpPercap\n1  Sovereign country    19289.97    885806 69.96000  8222.254\n2  Sovereign country   932745.79  52234869 64.16300  2402.099\n3      Indeterminate    96270.60        NA       NA        NA\n4  Sovereign country 10036042.98  35535348 81.95305 43079.143\n5            Country  9510743.74 318622525 78.84146 51921.985\n6  Sovereign country  2729810.51  17288285 71.62000 23587.338\n7  Sovereign country   461410.26  30757700 71.03900  5370.866\n8  Sovereign country   464520.07   7755785 65.23000  3709.082\n9  Sovereign country  1819251.33 255131116 68.85600 10003.089\n10 Sovereign country  2784468.59  42981515 76.25200 18797.548\n   coffee_production_2016 coffee_production_2017                           geom\n1                      NA                     NA MULTIPOLYGON (((-180 -16.55...\n2                      81                     66 MULTIPOLYGON (((33.90371 -0...\n3                      NA                     NA MULTIPOLYGON (((-8.66559 27...\n4                      NA                     NA MULTIPOLYGON (((-132.71 54....\n5                      NA                     NA MULTIPOLYGON (((-171.7317 6...\n6                      NA                     NA MULTIPOLYGON (((87.35997 49...\n7                      NA                     NA MULTIPOLYGON (((55.96819 41...\n8                     114                     74 MULTIPOLYGON (((141.0002 -2...\n9                     742                    360 MULTIPOLYGON (((104.37 -1.0...\n10                     NA                     NA MULTIPOLYGON (((-68.63401 -...\n\nplot(world_coffee[\"coffee_production_2016\"])\n\n\n\n\n\n\n\n# inner join\n(world_coffee2 = inner_join(world, coffee_data)) \n\nJoining with `by = join_by(name_long)`\n\n\nSimple feature collection with 45 features and 12 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -117.1278 ymin: -33.76838 xmax: 156.02 ymax: 35.49401\nGeodetic CRS:  WGS 84\nFirst 10 features:\n   iso_a2          name_long     continent region_un          subregion\n1      TZ           Tanzania        Africa    Africa     Eastern Africa\n2      PG   Papua New Guinea       Oceania   Oceania          Melanesia\n3      ID          Indonesia          Asia      Asia South-Eastern Asia\n4      KE              Kenya        Africa    Africa     Eastern Africa\n5      DO Dominican Republic North America  Americas          Caribbean\n6      TL        Timor-Leste          Asia      Asia South-Eastern Asia\n7      MX             Mexico North America  Americas    Central America\n8      BR             Brazil South America  Americas      South America\n9      BO            Bolivia South America  Americas      South America\n10     PE               Peru South America  Americas      South America\n                type   area_km2       pop lifeExp gdpPercap\n1  Sovereign country  932745.79  52234869  64.163  2402.099\n2  Sovereign country  464520.07   7755785  65.230  3709.082\n3  Sovereign country 1819251.33 255131116  68.856 10003.089\n4  Sovereign country  590836.91  46024250  66.242  2753.236\n5  Sovereign country   48157.87  10405844  73.483 12663.042\n6  Sovereign country   14714.93   1212814  68.285  6262.906\n7  Sovereign country 1969480.31 124221600  76.753 16622.597\n8  Sovereign country 8508557.09 204213133  75.042 15374.262\n9  Sovereign country 1085269.60  10562159  68.357  6324.827\n10 Sovereign country 1309699.64  30973354  74.518 11547.834\n   coffee_production_2016 coffee_production_2017                           geom\n1                      81                     66 MULTIPOLYGON (((33.90371 -0...\n2                     114                     74 MULTIPOLYGON (((141.0002 -2...\n3                     742                    360 MULTIPOLYGON (((104.37 -1.0...\n4                      60                     50 MULTIPOLYGON (((39.20222 -4...\n5                       1                     NA MULTIPOLYGON (((-71.7083 18...\n6                      14                      2 MULTIPOLYGON (((124.9687 -8...\n7                     151                    220 MULTIPOLYGON (((-117.1278 3...\n8                    3277                   2786 MULTIPOLYGON (((-53.37366 -...\n9                       3                      4 MULTIPOLYGON (((-69.52968 -...\n10                    585                    625 MULTIPOLYGON (((-69.89364 -...\n\n\n\n\n\n\n\n\nNote\n\n\n\nNotice the joining is done using the shared “key” variable “name_long”. By default, dplyr uses all variables with matching names. In this case, both world_coffee and world objects contained a variable called name_long, explaining the message Joining, by = “name_long”.\nWhere variable names are not the same, we have two options: (i) Rename the key variable in one of the objects so they match, or (ii) Use the by argument to specify the joining variables.\nThe difference between the two functions is that left_join() fully preserves the features of the left dataset while inner_join() will find the common elements belonging to both datasets. We may choose the desired function based on the final dataset we need.\n\n\n\n\n2.5.3.4 Create new attributes\n\nworld_coffee$prod_yoy = (world_coffee$coffee_production_2017/world_coffee$coffee_production_2016 - 1)*100\nworld_coffee\n\nSimple feature collection with 177 features and 13 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -180 ymin: -89.9 xmax: 180 ymax: 83.64513\nGeodetic CRS:  WGS 84\nFirst 10 features:\n   iso_a2        name_long     continent region_un          subregion\n1      FJ             Fiji       Oceania   Oceania          Melanesia\n2      TZ         Tanzania        Africa    Africa     Eastern Africa\n3      EH   Western Sahara        Africa    Africa    Northern Africa\n4      CA           Canada North America  Americas   Northern America\n5      US    United States North America  Americas   Northern America\n6      KZ       Kazakhstan          Asia      Asia       Central Asia\n7      UZ       Uzbekistan          Asia      Asia       Central Asia\n8      PG Papua New Guinea       Oceania   Oceania          Melanesia\n9      ID        Indonesia          Asia      Asia South-Eastern Asia\n10     AR        Argentina South America  Americas      South America\n                type    area_km2       pop  lifeExp gdpPercap\n1  Sovereign country    19289.97    885806 69.96000  8222.254\n2  Sovereign country   932745.79  52234869 64.16300  2402.099\n3      Indeterminate    96270.60        NA       NA        NA\n4  Sovereign country 10036042.98  35535348 81.95305 43079.143\n5            Country  9510743.74 318622525 78.84146 51921.985\n6  Sovereign country  2729810.51  17288285 71.62000 23587.338\n7  Sovereign country   461410.26  30757700 71.03900  5370.866\n8  Sovereign country   464520.07   7755785 65.23000  3709.082\n9  Sovereign country  1819251.33 255131116 68.85600 10003.089\n10 Sovereign country  2784468.59  42981515 76.25200 18797.548\n   coffee_production_2016 coffee_production_2017                           geom\n1                      NA                     NA MULTIPOLYGON (((-180 -16.55...\n2                      81                     66 MULTIPOLYGON (((33.90371 -0...\n3                      NA                     NA MULTIPOLYGON (((-8.66559 27...\n4                      NA                     NA MULTIPOLYGON (((-132.71 54....\n5                      NA                     NA MULTIPOLYGON (((-171.7317 6...\n6                      NA                     NA MULTIPOLYGON (((87.35997 49...\n7                      NA                     NA MULTIPOLYGON (((55.96819 41...\n8                     114                     74 MULTIPOLYGON (((141.0002 -2...\n9                     742                    360 MULTIPOLYGON (((104.37 -1.0...\n10                     NA                     NA MULTIPOLYGON (((-68.63401 -...\n    prod_yoy\n1         NA\n2  -18.51852\n3         NA\n4         NA\n5         NA\n6         NA\n7         NA\n8  -35.08772\n9  -51.48248\n10        NA\n\n\n\n\n\n\nBivand, Roger S., Edzer Pebesma, and Virgilio Gomez-Rubio. n.d. “Sp: Classes and Methods for Spatial Data.” Accessed August 31, 2025. https://cran.r-project.org/web/packages/sp/vignettes/intro_sp.pdf.\n\n\nBrunsdon, Chris, and Lex Comber. n.d. “An Introduction to Sp and Sf: The Sf Revolution.” Accessed August 31, 2025. https://bookdown.org/lexcomber/brunsdoncomber2e/Ch3.html.\n\n\n“Coordinate Systems Worldwide.” n.d. Accessed August 31, 2025. https://epsg.io.\n\n\nGimond, M. n.d. “Feature Representation.” Accessed August 31, 2025. https://mgimond.github.io/Spatial/feature-representation.html.\n\n\nLovelace, Robin. n.d. “Spatial Classes.” Accessed August 31, 2025. https://geocompr.robinlovelace.net/spatial-class.html.\n\n\nLovelace, Robin, Jakub Nowosad, and Jannes Muenchow. 2022. Geocomputation with r. https://geocompr.robinlovelace.net.\n\n\n———. 2023a. “Geocomputation with R: Spatial Operations.” 2023. https://geocompr.robinlovelace.net/spatial-operations.html#spatial-vec.\n\n\n———. 2023b. “Geocomputation with R: Vector Attribute Manipulation.” 2023. https://geocompr.robinlovelace.net/attr.html#vector-attribute-manipulation.\n\n\nNowosad, Jakub. n.d. “spData Package for r.” Accessed September 5, 2025. https://nowosad.github.io/spData/.\n\n\nSchabenberger, Oliver, and Carol A. Gotway. 2005. Statistical Methods for Spatial Data Analysis. 1st ed. CRC Press.\n\n\n“Simple Features for r (Sf) Vignette.” n.d. Accessed August 31, 2025. https://r-spatial.github.io/sf/articles/.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Introduction to R</span>"
    ]
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "3  Summary",
    "section": "",
    "text": "In summary, this book has no content whatsoever.\n\n1 + 1\n\n[1] 2\n\n\n\n\n\n\nBivand, Roger S., Edzer Pebesma, and Virgilio Gomez-Rubio. n.d. “Sp: Classes and Methods for Spatial Data.” Accessed August 31, 2025. https://cran.r-project.org/web/packages/sp/vignettes/intro_sp.pdf.\n\n\nBrunsdon, Chris, and Lex Comber. n.d. “An Introduction to Sp and Sf: The Sf Revolution.” Accessed August 31, 2025. https://bookdown.org/lexcomber/brunsdoncomber2e/Ch3.html.\n\n\n“Coordinate Systems Worldwide.” n.d. Accessed August 31, 2025. https://epsg.io.\n\n\nGimond, M. n.d. “Feature Representation.” Accessed August 31, 2025. https://mgimond.github.io/Spatial/feature-representation.html.\n\n\nLovelace, Robin. n.d. “Spatial Classes.” Accessed August 31, 2025. https://geocompr.robinlovelace.net/spatial-class.html.\n\n\nLovelace, Robin, Jakub Nowosad, and Jannes Muenchow. 2022. Geocomputation with r. https://geocompr.robinlovelace.net.\n\n\n———. 2023a. “Geocomputation with R: Spatial Operations.” 2023. https://geocompr.robinlovelace.net/spatial-operations.html#spatial-vec.\n\n\n———. 2023b. “Geocomputation with R: Vector Attribute Manipulation.” 2023. https://geocompr.robinlovelace.net/attr.html#vector-attribute-manipulation.\n\n\nNowosad, Jakub. n.d. “spData Package for r.” Accessed September 5, 2025. https://nowosad.github.io/spData/.\n\n\nSchabenberger, Oliver, and Carol A. Gotway. 2005. Statistical Methods for Spatial Data Analysis. 1st ed. CRC Press.\n\n\n“Simple Features for r (Sf) Vignette.” n.d. Accessed August 31, 2025. https://r-spatial.github.io/sf/articles/.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Summary</span>"
    ]
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Bivand, Roger S., Edzer Pebesma, and Virgilio Gomez-Rubio. n.d.\n“Sp: Classes and Methods for Spatial Data.” Accessed August\n31, 2025. https://cran.r-project.org/web/packages/sp/vignettes/intro_sp.pdf.\n\n\nBrunsdon, Chris, and Lex Comber. n.d. “An Introduction to Sp and\nSf: The Sf Revolution.” Accessed August 31, 2025. https://bookdown.org/lexcomber/brunsdoncomber2e/Ch3.html.\n\n\n“Coordinate Systems Worldwide.” n.d. Accessed August 31,\n2025. https://epsg.io.\n\n\nGimond, M. n.d. “Feature Representation.” Accessed August\n31, 2025. https://mgimond.github.io/Spatial/feature-representation.html.\n\n\nLovelace, Robin. n.d. “Spatial Classes.” Accessed August\n31, 2025. https://geocompr.robinlovelace.net/spatial-class.html.\n\n\nLovelace, Robin, Jakub Nowosad, and Jannes Muenchow. 2022.\nGeocomputation with r. https://geocompr.robinlovelace.net.\n\n\n———. 2023a. “Geocomputation with R:\nSpatial Operations.” 2023. https://geocompr.robinlovelace.net/spatial-operations.html#spatial-vec.\n\n\n———. 2023b. “Geocomputation with R:\nVector Attribute Manipulation.” 2023. https://geocompr.robinlovelace.net/attr.html#vector-attribute-manipulation.\n\n\nNowosad, Jakub. n.d. “spData Package\nfor r.” Accessed September 5, 2025. https://nowosad.github.io/spData/.\n\n\nSchabenberger, Oliver, and Carol A. Gotway. 2005. Statistical\nMethods for Spatial Data Analysis. 1st ed. CRC Press.\n\n\n“Simple Features for r (Sf) Vignette.” n.d. Accessed August\n31, 2025. https://r-spatial.github.io/sf/articles/.",
    "crumbs": [
      "References"
    ]
  }
]